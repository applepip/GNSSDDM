/*
 *   Example configuration file for
 *
 *   SNACS - The Satellite Navigation Radio Channel Simulator
 *
 *   Example 03: Channel interpolation 
 *
 *   Copyright (C) 2011  F. M. Schubert
 *
 */
 
Simulation:
{
	c0 = 3e8;
	
	result_directory = "/tmp/snacs-result_example03";
	append_date_to_outdir = true;// or false;

	Modules = (
		{	Type = "snSignalGenerate";

			sampling_frequency = 8e6; // Hz
			signal_length = 10.0; // s

			block_length = 0.002; // in s
			number_of_blocks_per_buffer = 12;
			
			start = 0.0001;
			signal = {
				inphase = {
					code = "C/A";
					prn = 1;
					modulation = "BPSK(n)";
					n = 1.0;
					data_type = "none";
					C_dB = 0.0; // in dBW. 0 dBW = 1 W.
				};
			};
		},

		{	Type = "snChannel";
			file = "snacs_cir_moving_los_cont.h5";
			interpolation_type = "SINC";
			stop_band_attenuation_dB = -80.0; // dB
			write_cdx_file = true;
		},		

		{	Type = "snNoise";
			seed_type = "time";
			start_sec = .0001;
			N0_dB = -45.0; // in dBW/Hz. For N0_dB = -45.0 => C/N0 = C_dB - N0_dB = 45 dBHz
		},		

		{	Type = "snLowPassFilter";
			coefficients_type = "window";
			order = 63;
			cut_off_frequency = 1.023e6; // one-sided bandwidth
		},
		
/*
		{	Type = "snADC";
			intermediate_frequency = 2e6; // Hz
			adc_enable = false;
			adc_bits = 8;		
			vga_enable = false;
			vga_lowest_amplification_dB = -40.0;//-6.0;
			vga_highest_amplification_dB = 100.0;//42.5;
		},
*/
		{	Type = "snSignalOutputWidget";
				buffers_to_display = 1;
		}
/*
		{	Type = "snSDRStandard";

			signal = {
				inphase = {
					code = "C/A";
					prn = 1;
					modulation = "BPSK(n)";
					n = 1.0;
					data_type = "none";
				};
			};

			intermediate_frequency = 0e6; // Hz
			aquisition_enable = false;
			start_tracking_at_time = .0001;
			
			Aquisition:	
			{	
				plot_3d = false;
				length = 1e-3;
				aq_freq_band = 10000.0; // Hz
				aq_freq_step = 250.0; // Hz
				threshold = 2.5;
			};		

			tracking_enable = true;
			Tracking:
			{
				DLL:
				{
					discriminator_type = "EML";
					correlation_length = 0.001; 
					early_late_spacing = 1.0;
					damping_ratio = 0.707;
					noise_bandwidth = 5.0;

					corr_func_samples = 13; // amount of additional samples on correlation function
					corr_func_start = -1.5; // start here with additional corr func samples in chips
					corr_func_dist = 0.25; // distance between corr func samples in chips
			
					write_corr_func = false;
				};
				PLL:
				{
					damping_ratio = 0.707;
					noise_bandwidth = 25.0;
				};
			};
		}
*/
	); // end SNBlocks
}; // end Simulation

Plotting:
{
	UpdateInterval = 1500; // ms
	plot_buffer_length = 0.0001; // s 
};

