/*
 *   Example configuration file for
 *
 *   SNACS - The Satellite Navigation Radio Channel Simulator
 *
 *   Debug 01
 *
 *   Copyright (C) 2009  F. M. Schubert
 *
 */
 
Simulation:
{
	sampling_frequency = 40.e6; // Hz
	c0 = 2.99e8;
	length = 20.0; // s

	conc_buf_length = 0.002; // in s
	buffers_per_concbuf = 4;
	
	result_directory = "/tmp/snacs-result";
	append_date_to_outdir = true;

	SNBlocks = (

		{	Type = "snSignalGenerate";
			start = 0.0000;
			signal = {
				inphase = {
					code = "C/A";
					prn = 1;
					modulation = "BPSK(n)";
					n = 1.0;
					data_type = "none";
				};
			};
		},
		
		{	Type = "snChannel";
			file = "../../examples/example_05/snacs-cir-file_DLRLMS_example-05-2.h5";
			//file = "../../examples/example_03/snacs_cir_moving_los_v01-2.h5";
			interpolation_type = "SINC";
			interpolation_bandwidth = 8.23e6;
		},		
		
/*
		{	Type = "snLowPassFilter";
			coefficients_type = "sinc";
			order = 64;
			cut_off_frequency = 8e6;
		},
*/	
/*
		{	Type = "snNoise";
			snr_db = 50.0;
			start_sec = 0.0;
		},		
*/
		{	Type = "snADC";
			intermediate_frequency = 015e6; // Hz
			adc_enable = true;
			adc_bits = 4;		
			vga_enable = true;
			vga_lowest_amplification_dB = -6.0;
			vga_highest_amplification_dB = 42.5;
		},

/*
		{	Type = "snSignalOutputWidget";
			buffers_to_display = 1;
		}
*/		

		{	Type = "snSDRStandard";
			signal = {
				inphase = {
					code = "C/A";
					prn = 1;
					modulation = "BPSK(n)";
					n = 1.0;
					data_type = "none";
				};
			};

			intermediate_frequency = 015e6; // Hz
			aquisition_enable = false;
			start_tracking_at_time = 0.0000;
			
			Aquisition:	
			{	
				plot_3d = false;
				length = 1e-3;
				aq_freq_band = 10000.0; // Hz
				aq_freq_step = 250.0; // Hz
				threshold = 2.5;
			};		

			tracking_enable = true;
			Tracking:
			{
				DLL:
				{
					discriminator_type = "EML";
					correlation_length = 0.001; 
					early_late_spacing = 1.0;
					damping_ratio = 0.707;
					noise_bandwidth = 5.0;

					corr_func_samples = 13; // amount of additional samples on correlation function
					corr_func_start = -1.5; // start here with additional corr func samples in chips
					corr_func_dist = 0.25; // distance between corr func samples in chips
			
					write_corr_func = false;
				};
				PLL:
				{
					damping_ratio = 0.707;
					noise_bandwidth = 25.0;
				};
			};
		}


	); // end SNBlocks
}; // end Simulation

Plotting:
{
	UpdateInterval = 5000; // ms
	PlotXSize = 300L; // pixel to be plottet. format: long (L)
	plot_buffer_length = 0.00001; // s
	 
};

